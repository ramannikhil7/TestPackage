


version: 2.1

orbs:
  windows: circleci/windows@2.0

jobs:
  build:
    description: Setup and run application tests
    executor:
      name: windows/default
      shell: powershell.exe

        # name: windows/server-2019
    # environment:
    #   DOTNET_VERSION: 3.1
    steps:
      - checkout:
          path: ~/repo
          # persist_to_workspace:
          # - ~/repo

      - run:
          name: Install Git
          command: |
            choco install git -y
            refreshenv
      - run: Get-Host 
      - run:
          name: Install PowerShell
          command: |
            choco install powershell -y
            refreshenv

      - run:
          name: Clone Repository
          command: |
            git config --global user.email "imnick592@gmail.com"
            git config --global user.name "ramannikhil7"
            git clone --branch main https://github.com/ramannikhil7/TestPackage ~/repo

      - run:
          name: Build Packages
          command: |
            cd ~/repo
            pwsh -Command test_PS_script.ps1
          # shell: 
          #   powershell.exe
      # - run: win/install-dotnet-sdk
      - run: dotnet --list-sdks
      - run: choco install dotnetcore-sdk --version=3.1.426
      - run: dotnet --list-sdks
      # - run: 
      #     name: Run PS script
          # shell: powershell.exe
          # command: powershell -ExecutionPolicy Bypass -File test_PS_script.ps1
      # - run: choco install gitversion.portable
      #- run: choco install netfx-4.8-devpack
      # - run: choco install netfx-4.7.2-devpack
      # - run: dotnet tool install -g dotnet-core-uninstall
      # Clone the GitHub repository
      # - run:

      #  name: Run PowerShell script
      #    command: |
      #       git clone https://github.com/ramannikhil7/TestPackage

      #       # Change to the directory containing the PowerShell script
      #       cd TestPackage

      #       # Run the PowerShell script
      #       # powershell.exe -File dotnet-core-uninstall-1.6.0.msi
      #       powershell.exe -ExecutionPolicy Bypass -Command "Start-Process -Wait -FilePath 'dotnet-core-uninstall-1.6.0.msi'"
      # - run: dotnet-core-uninstall remove --all-below 6.0 --sdk --force
      # - run: dotnet --list-sdks
      #- run:  dotnet restore .\all_projects.sln -p:TargetFramework=net471
workflows:
  build:
    jobs:
      - build



      # # Use the latest 2.1 version of CircleCI pipeline process engine.
# # See: https://circleci.com/docs/configuration-reference
# version: 2.1

# # Define a job to be invoked later in a workflow.
# # See: https://circleci.com/docs/configuration-reference/#jobs
# jobs:
#   # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
#   build-and-test:
#     # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
#     # See: https://circleci.com/docs/configuration-reference/#docker-machine-macos-windows-executor
#     # Be sure to update the tag on this image to a more stable version, using latest can result in unstable builds.
#     docker:
#       - image: microsoft/dotnet:latest
#     # Add steps to the job
#     # See: https://circleci.com/docs/configuration-reference/#steps
#     steps:
#       # Checkout the code as the first step.
#       - checkout
#       # Then simply use the dotnet container as you'd expect and run your tests
#       - run:
#           # Update this line with the directory that contains your tests project file
#           working_directory: ~/project/App.Tests
#           name: Run tests
#           command: |
#             dotnet test

# # Invoke jobs via workflows
# # See: https://circleci.com/docs/configuration-reference/#workflows
# workflows:
#   sample: # This is the name of the workflow, feel free to change it to better match your workflow.
#     # Inside the workflow, you define the jobs you want to run.
#     jobs:
#       - build-and-test



# version: 2.1

# orbs:
#   windows: circleci/windows@2.2.0

# jobs:
#   build:
#     description: Setup and run application tests
#     executor:
#       name: windows/default
#     steps:
#       - checkout
#       # - run: choco install gitversion.portable
#       #- run: choco install netfx-4.8-devpack
#       # - run: choco install netfx-4.7.2-devpack
#       # - run: dotnet tool install -g dotnet-core-uninstall
#        # Clone the GitHub repository
#       - run:
#          name: Run PowerShell script
#          command: |
#             git clone https://github.com/ramannikhil7/TestPackage

#             # Change to the directory containing the PowerShell script
#             cd TestPackage

#             # Run the PowerShell script
#             # powershell.exe -File dotnet-core-uninstall-1.6.0.msi
#             powershell.exe -ExecutionPolicy Bypass -Command "Start-Process -Wait -FilePath 'dotnet-core-uninstall-1.6.0.msi'"
#       - run: dotnet --list-sdks
#       - run: dotnet-core-uninstall remove --all-below 6.0 --sdk --force
#       - run: dotnet --list-sdks
#       #- run:  dotnet restore .\all_projects.sln -p:TargetFramework=net471
# workflows:
#   build:
#     jobs:
#       - build
